// Generated by Dagger (https://dagger.dev).
package com.woojoo.allsearching.ui.viewmodels;

import com.woojoo.allsearching.domain.usecases.DeleteResearchingUseCase;
import com.woojoo.allsearching.domain.usecases.GetAllResearchingUseCase;
import com.woojoo.allsearching.domain.usecases.UpdateResearchingUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class StorageViewModel_Factory implements Factory<StorageViewModel> {
  private final Provider<GetAllResearchingUseCase> getAllResearchingUseCaseProvider;

  private final Provider<DeleteResearchingUseCase> deleteResearchingUseCaseProvider;

  private final Provider<UpdateResearchingUseCase> updatedResearchingUseCaseProvider;

  public StorageViewModel_Factory(
      Provider<GetAllResearchingUseCase> getAllResearchingUseCaseProvider,
      Provider<DeleteResearchingUseCase> deleteResearchingUseCaseProvider,
      Provider<UpdateResearchingUseCase> updatedResearchingUseCaseProvider) {
    this.getAllResearchingUseCaseProvider = getAllResearchingUseCaseProvider;
    this.deleteResearchingUseCaseProvider = deleteResearchingUseCaseProvider;
    this.updatedResearchingUseCaseProvider = updatedResearchingUseCaseProvider;
  }

  @Override
  public StorageViewModel get() {
    return newInstance(getAllResearchingUseCaseProvider.get(), deleteResearchingUseCaseProvider.get(), updatedResearchingUseCaseProvider.get());
  }

  public static StorageViewModel_Factory create(
      Provider<GetAllResearchingUseCase> getAllResearchingUseCaseProvider,
      Provider<DeleteResearchingUseCase> deleteResearchingUseCaseProvider,
      Provider<UpdateResearchingUseCase> updatedResearchingUseCaseProvider) {
    return new StorageViewModel_Factory(getAllResearchingUseCaseProvider, deleteResearchingUseCaseProvider, updatedResearchingUseCaseProvider);
  }

  public static StorageViewModel newInstance(GetAllResearchingUseCase getAllResearchingUseCase,
      DeleteResearchingUseCase deleteResearchingUseCase,
      UpdateResearchingUseCase updatedResearchingUseCase) {
    return new StorageViewModel(getAllResearchingUseCase, deleteResearchingUseCase, updatedResearchingUseCase);
  }
}

// Generated by data binding compiler. Do not edit!
package com.woojoo.allsearching.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.woojoo.allsearching.R;
import com.woojoo.allsearching.domain.entites.Researching;
import com.woojoo.allsearching.ui.adapter.StorageAdapter;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemStorageBinding extends ViewDataBinding {
  @NonNull
  public final ConstraintLayout itemContainer;

  @NonNull
  public final ImageView ivThumnail;

  @NonNull
  public final TextView tvIndexValue;

  @Bindable
  protected Researching mItem;

  @Bindable
  protected StorageAdapter.DeleteLocalItem mCallback;

  protected ItemStorageBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ConstraintLayout itemContainer, ImageView ivThumnail, TextView tvIndexValue) {
    super(_bindingComponent, _root, _localFieldCount);
    this.itemContainer = itemContainer;
    this.ivThumnail = ivThumnail;
    this.tvIndexValue = tvIndexValue;
  }

  public abstract void setItem(@Nullable Researching item);

  @Nullable
  public Researching getItem() {
    return mItem;
  }

  public abstract void setCallback(@Nullable StorageAdapter.DeleteLocalItem callback);

  @Nullable
  public StorageAdapter.DeleteLocalItem getCallback() {
    return mCallback;
  }

  @NonNull
  public static ItemStorageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_storage, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemStorageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemStorageBinding>inflateInternal(inflater, R.layout.item_storage, root, attachToRoot, component);
  }

  @NonNull
  public static ItemStorageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_storage, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemStorageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemStorageBinding>inflateInternal(inflater, R.layout.item_storage, null, false, component);
  }

  public static ItemStorageBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemStorageBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemStorageBinding)bind(component, view, R.layout.item_storage);
  }
}
